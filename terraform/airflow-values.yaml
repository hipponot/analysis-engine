
airflow:
  executor: KubernetesExecutor
  ## Webserver
  webserver:
    service:
      type: LoadBalancer
    extraEnv:
      - name: AIRFLOW__CORE__LOAD_EXAMPLES
        value: "false"
  ## Worker
  worker:
    replicas: 1
    persistence:
      enabled: false
  ## Scheduler
  scheduler:
    replicas: 1
  ## Flower
  flower:
    enabled: false
  ## Redis
  redis:
    enabled: true
  ## Postgres
  postgresql:
    enabled: true

  ## Enable IRSA for S3 access
  ## This assumes you have an OIDC provider configured for your EKS cluster
  ## and an IAM role with appropriate S3 permissions.
  ## The EKS module already sets up the OIDC provider.
  ## We will need to create an IAM role for Airflow service account.
  serviceAccount:
    create: true
    name: airflow-sa
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::${data.aws_caller_identity.current.account_id}:role/${var.cluster_name}-airflow-s3-access"
